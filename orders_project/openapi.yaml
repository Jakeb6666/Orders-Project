openapi: 3.0.1
info:
  title: Online Order API
  version: 1.0.0
  description: A basic API for working with Swagger tools.
paths:
  /orders:
    summary: Get all of the orders data.
    description: >-
      This path is used to retrieve all of the orders data from the orders.json
      file.
    get:
      summary: Gets the order information.
      description: Retrieve the order data from the orders.json file.
      operationId: get_orders
      responses:
        '200':
          content:
            application/json:
              examples:
                orders:
                  value: >-
                    {"orders":[{"name":"Carey
                    Maynard","id":"001","state":"pending"},{"name":"Angelo
                    Ayala","id":"002","state":"canceled"},{"name":"Regina
                    Yates","id":"003","state":"pending"},{"name":"Elliott
                    Mcclure","id":"004","state":"pending"}]}
        default:
          description: Default error sample response
      tags:
        - Orders
  /neworder:
    summary: Input a new order.
    description: This path is used to add a new order to the orders.json file.
    post:
      summary: Adds a new order to the orders.json file.
      description: Posts a order to the current orders.
      operationId: post_orders
      requestBody:
        description: A new order object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              examples:
                New Order:
                  value: |-
                    {
                      "name": "Valeria Carlson",
                      "id": "005",
                      "state": "pending"
                    }
        default:
          description: Default error sample response
      tags:
        - New
  /update/{id}:
    summary: Update the status of an existing order.
    description: >-
      This path is used to change the status of an order matching the provided
      id. It modifies the state attribute of each order.
    put:
      summary: Updates the state of an order.
      description: >-
        Uses a PUT operation to update the state of an order with a matching id
        in the orders.json file.
      operationId: update_order
      parameters:
        - name: id
          in: path
          description: 'The id of the order.'
          required: true
          schema:
            type: string
      responses:
        '404':
          content:
            text/plain; charset=utf-8:
              examples:
                Update Order:
                  value: Order has Updated.
        default:
          description: Default error sample response
      tags:
        - Update
  /delete/{id}:
    summary: Remove an order.
    description: >-
      This path is used to delete an order with a matching id.
    delete:
      summary: Removes an order.
      description: >-
        Delete an order with a matching id from the orders.json file.
      operationId: delete_order
      parameters:
        - name: id
          in: path
          description: 'The id of the order.'
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            text/plain; charset=utf-8:
              examples:
                Delete Order:
                  value: Order has been removed successfully.
        '404':
          content:
            text/plain; charset=utf-8:
              examples:
                Delete Order:
                  value: Order has not been removed successfully. ID was not found.
        default:
          description: Default error sample response
      tags:
        - Delete
        
components:
  schemas:
    Order:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        state:
          type: string
      xml:
        name: Order